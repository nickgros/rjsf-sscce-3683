import "src/components/Plugins/UiSchema/styleCss/uiSchemaCableur.css";
import { useTranslation } from "react-i18next";

export const useUiSchemaCableur = () => {
  const { t } = useTranslation();
  const uiSchemaCableur = {
    "ui:rootFieldId": "cableur",
    user: {
      "ui:widget": "hidden",
      "ui:description": t("user"),
      "ui:style": {
        textAlign: "center",
        width: "90%",
        display: "block",
        margin: "0 auto",
        borderRadius: "5px",
        padding: "0px 5px",
        cursor: "pointer",
        boxShadow: "0px 1px 6px 2px rgba(0,0,0,0.1)",
        marginBottom: "5px",
        marginTop: "10px",
      },
    },
    label: {
      "ui:description": t("plugin.enterLabel"),
      "ui:style": {
        textAlign: "center",
        width: "90%",
        display: "block",
        margin: "0 auto",
        borderRadius: "5px",
        padding: "0px 5px",
        cursor: "pointer",
        boxShadow: "0px 1px 6px 2px rgba(0,0,0,0.1)",
        marginBottom: "15px",
        marginTop: "10px",
      },
    },
    attribute: {
      "ui:description": t("sqlRequest.selectAttribute"),
      "ui:style": {
        textAlign: "center",
        width: "90%",
        display: "block",
        margin: "0 auto",
        borderRadius: "5px",
        padding: "0px 5px",
        cursor: "pointer",
        boxShadow: "0px 1px 6px 2px rgba(0,0,0,0.1)",
        marginBottom: "25px",
        marginTop: "10px",
      },
    },
    value: {
      "ui:description": t("plugin.enterValue"),
      "ui:style": {
        marginTop: "1rem",
        textAlign: "center",
        width: "90%",
        display: "block",
        margin: "0 auto",
        padding: "0px 5px",
        borderRadius: "5px",
        cursor: "pointer",
        marginBottom: "25px",
        boxShadow: "0px 1px 6px 2px rgba(0,0,0,0.1)",
      },
    },
    general: {
      "ui:title": t("general"),
      working_buffer_distance: {
        "ui:description": t("plugin.bufferDistance"),
        "ui:style": {
          textAlign: "center",
          width: "90%",
          display: "block",
          margin: "0 auto",
          borderRadius: "5px",
          cursor: "pointer",
          boxShadow: "0px 1px 6px 2px rgba(0,0,0,0.1)",
          marginBottom: "15px",
          marginTop: "10px",
        },
      },
      multi_start: {
        "ui:title": t("plugin.multiStart"),
      },
    },
    cables_nodes: {
      "ui:title": `${t("cable_one")} / ${t("nodes")}`,
      node_start_attribute: {
        "ui:description": t("plugin.typeBpe"),
        "ui:style": {
          textAlign: "center",
          width: "90%",
          padding: "0px 5px",
          display: "block",
          margin: "0 auto",
          borderRadius: "5px",
          cursor: "pointer",
          borderBottom: "15px",
          boxShadow: "0px 1px 6px 2px rgba(0,0,0,0.1)",
          marginBottom: "10px",
          marginTop: "10px",
        },
      },
      node_start_value: {
        "ui:description": t("plugin.typeBpeId"),
        "ui:style": {
          marginTop: "1rem",
          textAlign: "center",
          width: "90%",
          display: "block",
          margin: "0 auto",
          padding: "0px 5px",
          borderRadius: "5px",
          cursor: "pointer",
          borderBottom: "15px",
          boxShadow: "0px 1px 6px 2px rgba(0,0,0,0.1)",
        },
      },
      tr: {
        "ui:style": {
          textAlign: "center",
          width: "90%",
          display: "block",
          margin: "0 auto",
          padding: "5px 15px",
          borderRadius: "5px",
          cursor: "pointer",
          borderBottom: "15px",
          boxShadow: "0px 1px 6px 2px rgba(0,0,0,0.1)",
          marginBottom: "10px",
          marginTop: "10px",
        },
        connect_authorized: {
          "ui:widget": "checkboxes",
        },
        "ui:title": t("plugin.transport"),
      },
      di: {
        "ui:style": {
          textAlign: "center",
          width: "90%",
          display: "block",
          margin: "0 auto",
          padding: "5px 15px",
          borderRadius: "5px",
          cursor: "pointer",
          borderBottom: "15px",
          boxShadow: "0px 1px 6px 2px rgba(0,0,0,0.1)",
          marginBottom: "10px",
          marginTop: "10px",
        },
        connect_authorized: {
          "ui:widget": "checkboxes",
        },
        "ui:title": t("plugin.distribution"),
      },
      ad: {
        "ui:style": {
          textAlign: "center",
          width: "90%",
          display: "block",
          margin: "0 auto",
          padding: "5px 15px",
          borderRadius: "5px",
          cursor: "pointer",
          borderBottom: "15px",
          boxShadow: "0px 1px 6px 2px rgba(0,0,0,0.1)",
          marginBottom: "10px",
          marginTop: "10px",
        },
        connect_authorized: {
          "ui:widget": "checkboxes",
        },
        "ui:title": t("adduction").toLowerCase(),
      },
      ab: {
        "ui:style": {
          textAlign: "center",
          width: "90%",
          display: "block",
          margin: "0 auto",
          padding: "5px 15px",
          borderRadius: "5px",
          cursor: "pointer",
          borderBottom: "15px",
          boxShadow: "0px 1px 6px 2px rgba(0,0,0,0.1)",
          marginBottom: "10px",
          marginTop: "10px",
        },
        connect_authorized: {
          "ui:widget": "checkboxes",
        },
        "ui:title": t("plugin.subscriber"),
      },
    },
    infrastructure: {
      //infrastructure: Partie désactivé pour le moment, pas de rendu côté client
      // mais envoi en dur dans le formdata quand même
      "ui:widget": "hidden",
      "ui:title": t("infrastructure"),
      "ui:classNames":
        "MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2 MuiGrid-item",
      snapping_permission: {
        "ui:description": t("plugin.snappingPermission"),
        "ui:style": {
          textAlign: "center",
          width: "85%",
          display: "block",
          margin: "0 auto",
          borderRadius: "5px",
          cursor: "pointer",
          padding: "0px 5px",
          borderBottom: "15px",
          boxShadow: "0px 1px 6px 2px rgba(0,0,0,0.1)",
          marginBottom: "10px",
          marginTop: "10px",
        },
      },
      snapping_distance: {
        "ui:description": t("plugin.snappingDistance"),
        "ui:style": {
          textAlign: "center",
          width: "85%",
          display: "block",
          margin: "0 auto",
          padding: "0px 5px",
          borderRadius: "5px",
          cursor: "pointer",
          borderBottom: "15px",
          boxShadow: "0px 1px 6px 2px rgba(0,0,0,0.1)",
          marginBottom: "10px",
        },
      },
      distance_between_intersection_points: {
        "ui:description": t("plugin.intersectionDistance"),
        "ui:style": {
          textAlign: "center",
          width: "85%",
          display: "block",
          margin: "0 auto",
          padding: "0px 5px",
          borderRadius: "5px",
          cursor: "pointer",
          borderBottom: "15px",
          boxShadow: "0px 1px 6px 2px rgba(0,0,0,0.1)",
          marginBottom: "10px",
        },
      },
      nb_split_to_be_considered_intersection: {
        "ui:description": t("plugin.splitIntersection"),
        "ui:style": {
          textAlign: "center",
          width: "85%",
          display: "block",
          margin: "0 auto",
          borderRadius: "5px",
          padding: "0px 5px",
          cursor: "pointer",
          borderBottom: "15px",
          boxShadow: "0px 1px 6px 2px rgba(0,0,0,0.1)",
        },
      },
    },
    "ui:submitButtonOptions": {
      submitText: t("send"),
    },
  };
  return { uiSchemaCableur };
};
